generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Team {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  name String @unique

  players Player[]

  homeMatches Match[] @relation("homeTeamMatches")
  awayMatches Match[] @relation("awayTeamMatches")
}

model Player {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  firstName String
  lastName  String

  gender Boolean

  teamId String
  team   Team   @relation(references: [id], fields: [teamId])

  matches MatchPlayer[]
}

model Match {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  timestamp DateTime

  homeTeamId String
  homeTeam   Team   @relation("homeTeamMatches", references: [id], fields: [homeTeamId])

  awayTeamId String
  awayTeam   Team   @relation("awayTeamMatches", references: [id], fields: [awayTeamId])

  players MatchPlayer[]
}

model MatchPlayer {
  id String @id @default(uuid())

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  position Int @db.SmallInt

  playerId String?
  player   Player? @relation(references: [id], fields: [playerId])

  matchId String
  match   Match  @relation(references: [id], fields: [matchId])

  scores Score[]
}

model Score {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  matchPlayerId String
  matchPlayer   MatchPlayer @relation(fields: [matchPlayerId], references: [id])

  leg Int @db.SmallInt

  score Int     @db.SmallInt
  spare Boolean

  @@id([matchPlayerId, leg])
}
